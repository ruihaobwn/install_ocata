---

- name: Create database
  mysql_db:
    login_user: root
    login_password: "{{ MARIADB_ROOT }}"
    name: "{{ item }}"
    state: present
  with_items:
  - nova_api
  - nova
  - nova_cell0

- name: create user glance
  shell: |
    mysql -uroot -pmysql -ne "GRANT ALL PRIVILEGES ON {{ item }}.* TO 'nova'@'localhost' IDENTIFIED BY '{{ NOVA_DBPASS }}'"
    mysql -uroot -pmysql -ne "GRANT ALL PRIVILEGES ON {{ item }}.* TO 'nova'@'%' IDENTIFIED BY '{{ NOVA_DBPASS }}'"
  with_items:
  - nova_api
  - nova
  - nova_cell0

- block:
  - name: Create the nova user
    os_user:
      state: present
      name: nova
      password: "{{ NOVA_PASS }}"
      domain: default

  - name: Add the admin role to the nova user and service project
    os_user_role:
      user: nova
      role: admin
      project: service      

  - name: Create the glance service entity
    os_keystone_service:
      state: present
      name: nova
      service_type: compute
      description: OpenStack Compute

  - name: Create the Image service API endpoints
    shell: |
      openstack endpoint create --region RegionOne  compute public http://controller:8774/v2.1
      openstack endpoint create --region RegionOne compute internal http://controller:8774/v2.1
      openstack endpoint create --region RegionOne compute admin http://controller:8774/v2.1
  
  - name: Create a Placement service user 
    os_user:
      state: present
      name: placement
      password: "{{ PLACEMENT_PASS }}"
      domain: default

  - name: Add the Placement user to the service project with the admin role
    os_user_role:
      user: placement
      role: admin
      project: service

  - name: Create the placement service entity
    os_keystone_service:
      state: present
      name: placement
      service_type: placement
      description: Placement API


  - name: Create the Placement API entry in the service catalog
    shell: |
      openstack endpoint create --region RegionOne placement public http://controller:8778
      openstack endpoint create --region RegionOne placement internal http://controller:8778
      openstack endpoint create --region RegionOne placement admin http://controller:8778
  environment:
    OS_PROJECT_DOMAIN_NAME: Default
    OS_USER_DOMAIN_NAME: Default
    OS_PROJECT_NAME: admin
    OS_USERNAME: admin
    OS_PASSWORD: "{{ ADMIN_PASS }}"
    OS_AUTH_URL: http://controller:35357/v3
    OS_IDENTITY_API_VERSION: 3
    OS_IMAGE_API_VERSION: 2


- name: install the packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
  - openstack-nova-api
  - openstack-nova-conductor
  - openstack-nova-console
  - openstack-nova-novncproxy
  - openstack-nova-scheduler
  - openstack-nova-placement-api

- name: Edit nova.conf
  ini_file:
    path: /etc/nova/nova.conf
    section:  "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
  - { section: 'DEFAULT', option: 'enabled_apis',value: 'osapi_compute,metadata' }
  - { section: 'api_database', option: 'connection',value: 'mysql+pymysql://nova:{{ NOVA_DBPASS }}@controller/nova_api' }
  - { section: 'database', option: 'connection',value: 'mysql+pymysql://nova:{{ NOVA_DBPASS }}@controller/nova' }
  - { section: 'DEFAULT', option: 'transport_url',value: 'rabbit://openstack:{{ RABBIT_PASS }}@controller' }
  - { section: 'api', option: 'auth_strategy',value: 'keystone' }
  - { section: 'keystone_authtoken', option: 'auth_uri',value: 'http://controller:5000' }
  - { section: 'keystone_authtoken', option: 'auth_url',value: 'http://controller:35357' }
  - { section: 'keystone_authtoken', option: 'memcached_servers',value: 'controller:11211' }
  - { section: 'keystone_authtoken', option: 'auth_type',value: 'password' }
  - { section: 'keystone_authtoken', option: 'project_domain_name',value: 'default' }
  - { section: 'keystone_authtoken', option: 'user_domain_name',value: 'default' }
  - { section: 'keystone_authtoken', option: 'project_name',value: 'service' }
  - { section: 'keystone_authtoken', option: 'username',value: 'nova' }
  - { section: 'keystone_authtoken', option: 'password',value: '{{ NOVA_PASS }}' }
  - { section: 'DEFAULT', option: 'my_ip', value: "{{ groups['controller'][0]}}" }
  - { section: 'DEFAULT', option: 'use_neutron', value: 'True' }
  - { section: 'DEFAULT', option: 'firewall_driver', value: 'nova.virt.firewall.NoopFirewallDriver' }
  - { section: 'vnc', option: 'enabled', value: 'true' }
  - { section: 'vnc', option: 'vncserver_listen', value: '$my_ip' }
  - { section: 'vnc', option: 'vncserver_proxyclient_address', value: '$my_ip' }
  - { section: 'glance', option: 'api_servers', value: 'http://controller:9292'}
  - { section: 'oslo_concurrency', option: 'lock_path', value: '/var/lib/nova/tmp'}
  
  - { section: 'placement', option: 'os_region_name',value: 'RegionOne' }
  - { section: 'placement', option: 'auth_url',value: 'http://controller:35357/v3' }
  - { section: 'placement', option: 'auth_type',value: 'password' }
  - { section: 'placement', option: 'project_domain_name',value: 'default' }
  - { section: 'placement', option: 'user_domain_name',value: 'default' }
  - { section: 'placement', option: 'project_name',value: 'service' }
  - { section: 'placement', option: 'username',value: 'placement' }
  - { section: 'placement', option: 'password',value: '{{ PLACEMENT_PASS }}' }
  
- name: adding configuration to 00-nova-placement-api.conf
  blockinfile:
    path: /etc/httpd/conf.d/00-nova-placement-api.conf
    block: |
      <Directory /usr/bin>
        <IfVersion >= 2.4>
          Require all granted
        </IfVersion>
        <IfVersion < 2.4>
           Order allow,deny
           Allow from all
        </IfVersion>
      </Directory>

- name: Restart the httpd service
  service:
    name: httpd
    state: restarted

- name: Populate the Image service database
  command: "{{ item }}"
  become: true
  become_method: su
  become_user: nova
  become_flags: '-s /bin/sh'
  with_items: 
  - nova-manage api_db sync
  - nova-manage cell_v2 map_cell0
  #- nova-manage cell_v2 create_cell --name=cell1 --verbose
  - nova-manage db sync

- name: Populate the Image service database
  command: "{{ item }}"
  become: true
  become_method: su
  become_user: nova
  become_flags: '-s /bin/sh'
  with_items:
  - nova-manage cell_v2 create_cell --name=cell1 --verbose
  ignore_errors: yes  

- name: Start the Apache HTTP service
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - openstack-nova-api
    - openstack-nova-consoleauth
    - openstack-nova-scheduler
    - openstack-nova-conductor
    - openstack-nova-novncproxy
